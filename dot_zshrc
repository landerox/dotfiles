# ==================================================
# Oh My Zsh Configuration
# ==================================================
export ZSH="$HOME/.oh-my-zsh"

# Plugins to enhance the terminal
plugins=(
  docker
  dotenv
  eza
  fzf
  git
  git-commit
  git-flow-avh
  minikube
  pip
  poetry
  starship
  sublime
  terraform
  tldr
  zsh-autosuggestions
)

# Load Oh My Zsh
source $ZSH/oh-my-zsh.sh

# Load zsh-syntax-highlighting after everything else
if [ -f "$ZSH/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
  source "$ZSH/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
fi

# ==================================================
# Environment Variables and PATH Configuration
# ==================================================
# Add custom paths
export PATH="$HOME/.local/bin:$HOME/bin:/snap/tldr/current/bin:$PATH"

# TMUX socket directory
export TMUX_TMPDIR="$HOME/.tmux/sockets"
mkdir -p "$TMUX_TMPDIR"

# Pyenv setup
export PYENV_ROOT="$HOME/.pyenv"
if [ -d "$PYENV_ROOT/bin" ]; then
  export PATH="$PYENV_ROOT/bin:$PATH"
fi

# ==================================================
# Shell Options
# ==================================================
# Ignore duplicate history entries
setopt hist_ignore_all_dups

# Share history across sessions and append in real-time
setopt share_history
setopt inc_append_history

# Set history size
export HISTSIZE=1000
export SAVEHIST=1000

# Store history in a specific file
export HISTFILE="$HOME/.zsh_history"

# ==================================================
# Tool Configuration
# ==================================================
# Homebrew (load only when 'brew' is invoked)
if [ -d "/home/linuxbrew/.linuxbrew/bin" ]; then
  brew() {
    unset -f brew  # Remove temporary function
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"  # Initialize Homebrew
    command brew "$@"  # Forward arguments to 'brew'
  }
fi

# Google Cloud SDK (load only when 'gcloud' is invoked)
if [ -f "/usr/share/google-cloud-sdk/completion.zsh.inc" ]; then
  gcloud() {
    unset -f gcloud  # Remove temporary function
    source "/usr/share/google-cloud-sdk/completion.zsh.inc"  # Load gcloud completion
    command gcloud "$@"  # Forward arguments to 'gcloud'
  }
fi

# Pyenv initialization
if command -v pyenv &> /dev/null; then
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

# ==================================================
# Default Starting Directory
# ==================================================
# Change to the home directory only in initial interactive terminals
if [[ -o login ]]; then
  cd ~
fi

# ==================================================
# Customizations
# ==================================================
# Load custom functions
if [ -f "$HOME/.config/functions.zsh" ]; then
  source "$HOME/.config/functions.zsh"
  echo "Custom functions loaded from ~/.config/functions.zsh"
else
  echo "No functions file found at ~/.config/functions.zsh"
fi

# Load custom aliases
if [ -f "$HOME/.config/aliases.zsh" ]; then
  source "$HOME/.config/aliases.zsh"
  echo "Custom aliases loaded from ~/.config/aliases.zsh"
else
  echo "No aliases file found at ~/.config/aliases.zsh"
fi

# Run Neofetch on startup in interactive shells
if [[ $- == *i* ]] && [ -z "$TMUX" ] && [ -z "$VIRTUAL_ENV" ] && [[ -o login ]] && [ -z "$DISABLE_NEOFETCH" ]; then
  clear
  neofetch
fi
